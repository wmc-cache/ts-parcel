{"version":3,"sources":["src/Vue2.0/Dep.ts","src/Vue2.0/Watcher.ts","src/Vue2.0/Compiler.ts","src/Vue2.0/Observer.ts","src/Vue2.0/Vue.ts","src/Vue2.0/index.ts"],"names":[],"mappings":"cAAA,AGAA;;;;;;AEAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAI,KAAA,CAAA,GAAJ,CAAQ;AACN,EAAA,EAAE,EAAE,MADE;AAEN,EAAA,IAAI,EAAE;AACJ,IAAA,OAAO,EAAE;AADL;AHJR,AEAA,AHAA,AIEQ,CAAR,GHFA,AFEa,AIFb,AHAA,KAAA,GAAA,CCAA,CEAA,EFAA,CEAA,EHAA,CAAA,GCAA,CAAA,AEAA,CAAA,EHAA,CAAA,OCAA,CAAA,CEAA,CAAA;AJGE,iBAAoC;AAAA,AGDtC,ACDA,IFCc,ACAd,ACDA,AHCa,IDCS,CGDtB,GHCsC,AGDtC,ECDA,GAAA,EDCA,CAAA,ICDA,CAAA,EDCA,CAAA,SCDA,CAAA,6CJEoC,EAAE;AECpC,ADAA,mBACU,CCDU,CDApB,CCAA,CDEU,CCFiB,EDA3B,EAGU,EAHV,EAGqC;ACHV,AFDS,ACIC,IEF1B,ACFA;ADGX,ACAA,eAAoB,KDAR,ECAZ,EDAA,ACAgC,EDAX;ADFD,AFDA,AGGC,ACAW,AHDtB,SCDU,AFDA,ACEV,ECDU,ADCV,EDFU,CECA,ADCV,ECDU,AFDA,ACEV,IDFU;AEElB,AFFsC,ACG9B,IDAV,KEDO,ADCG,ECDR,CDCQ,ECDE,CDCF,CCDI,CAAC,CDCL,ECDR;AACA,ACCA,ACDkB,AHCV,SCDH,ACCA,ACDa,AHCV,ECDR,ADCQ,EEAR,CDDU,ACCA,AFAF,ECDR,AEAkB,AHCV,CAA2B,CEAnC,AFEA,CGHkB,OAAA,CAAY,CAC9B;AFAA,ACCD,SDDM,OAAL,CAAa,KAAK,EAAlB;AACD,AEAC,AHEA,ICDF,ADCE,KGFK,AHEL,CAAA,GAAA,CGFA,AHEI,GGFS,GHEb,GAAa,CGFO,CAAC,EHErB,EGFA;AACA,AHEA,IAAA,KGFK,EHEE,CGFP,AHEQ,GGDN,AHCF,CAAY,MGDH,MHCT,CGDgB,CAAC,AHCS,EGDxB,GHCwB,CAAA,CGDF,EHCE,CAAI,KGD5B,CHCF,EGAM,AHJ6B,CAKnC,OGDc,CAAC,aAAT,CAAuB,OAAO,CAAC,EAA/B,CADJ,GAEI,OAAO,CAAC,EAHd,CAH8B,CAO9B;WJNF,gBAAO,GAAP,EAAe;AACb,AIMA,AHDA,SGCK,AHDA,CDLD,CGCN,EHDS,IAAI,ACKX,CGCA,CAAe,CJND,ACKE,CDLD,CCKG,CAAC,CGCC,CDLjB,CFIe,CDLlB,ACKA,EDLuB,AGCzB,ACKE,EDLY,ACHkB,CAS9B;AJNE,AGAU,AFKZ,IAAA,KAAA,CAAA,GDLO,ACKP,CAAI,GDLF,CAAU,ECKZ,EDLE,CAAe,ACKJ,GDLX,CCKF;ADJC,AIMD,AHDD,IACD,IGAM,GFNN,OEMM,CAAA,QAAJ,CFNM,AEMO,EFNf,EAAe,CEMK,KAAlB,EAV8B,CAW9B;AFPa,AFCd,AGDC,MHEF;AGDE,ACOA,QAAI,EDPA,CAAC,IAAD,GCOA,CDPS,ACOT,QDPgB,ACOpB,CAAa,GDPA,CCOb,KDP6B,QAA7B,EAAuC;ADAvC,ACCE,ACOH,UFRK,UAAU,GAAG,EAAE,CAAC,UAApB;AACA,ACCC,MDDD,CCHY,CAKZ,GDFK,CAAC,IAAN,CAAW,UAAX,EAAuB,OAAvB,CAA+B,UAAC,IAAD,EAAc;AAC3C,WFAJ,ACIA,kBDJM,ACIA;ACHF,AFAF,ACIA,UAAI,CDJC,IAAL,CAAU,ECIE,GAAG,EDJf,CAAkB,ECIE,EAAL,CAAQ,KDJJ,ACIS,GDJV,ACIH,CAAf,CDJ0B,ACGtB,CAEJ;ACJE,AFAA,AGAF,MAAA,EHAE,GAAG,AIKP,CFLQ,AFAA,AGAA,CAAC,IDAG,ACAV,CDAW,AFAT,AGAU,IAAZ,EAAkB,IDAZ,CAAgB,CEKd,CDLR,CAA0B,CDApB,CAAJ,AEKJ,EFL+B,AEKZ,MDLU,GAAD,EAAQ;ADC9B,AFAH,AGAC,ACIe,AHAjB,ODNA,CGEE,EDAE,ADIA,GEJE,CAAC,CDAC,ADIC,CCJA,ODIL,ICJA,CAAiB,ACAnB,AFIoB,CEJA,GDAlB,CCAF,EAA0B,CFI5B,EEJE,AFI8B,EEJC,IAAI,CAAC,GAAD,CAAnC;ADCC,AFAJ,AGAE,AFIC,OENF,EDAE,MAEO,IAAI,KAAI,CAAC,aAAL,CAAmB,IAAnB,CAAJ,EAA8B;AACnC,ACAL,ACGC,AHCC,MGDD,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,OAAlB,CAA0B,UAAC,GAAD,EAAQ;AFF9B,AEGF,QA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","file":"Vue2.0.70fdd67f.js","sourceRoot":"..","sourcesContent":["//Dep 的角色，宛如一个“工具人”，它是 Watcher 和 Observer 之间的纽带，是“通信兵”\n\nexport class Dep {\n  constructor(private subs: any[] = []) {}\n  // 存储所有的观察者\n  static target: any\n  // 添加观察者\n  addSub(sub: any) {\n    if (sub && sub.update) {\n      this.subs.push(sub)\n    }\n  }\n  // 发送通知\n  notify() {\n    this.subs.forEach((sub) => {\n      sub.update()\n    })\n  }\n}\n","import { Dep } from './Dep'\n\nexport class Watcher {\n  private oldValue: any\n  constructor(\n    private vm: any,\n    private key: string,\n    private cb: (...arg: any[]) => void\n  ) {\n    // 把Watcher对象变化的时候更新视图\n    Dep.target = this\n    console.log('Dep.target', Dep.target)\n    // 触发get方法, 在get方法中调用addSub\n    this.oldValue = vm[key]\n    Dep.target = null\n  }\n  // 当数据发生变化的时候更新视图\n  update() {\n    let newValue = this.vm[this.key]\n    // 判断新值和旧值是否相等\n    if (this.oldValue === newValue) {\n      return\n    }\n    this.cb(newValue)\n  }\n}\n","import { Watcher } from './Watcher'\n\n export class Compiler {\n  private el: any\n  constructor(private vm: any) {\n    this.el = vm.$el\n    this.vm = vm\n    this.compile(this.el)\n  }\n  // 编译模板, 处理文本节点和元素节点\n  compile(el: any) {\n    let childNodes = el.childNodes\n    Array.from(childNodes).forEach((node: any) => {\n      // 处理文本节点\n      // console.log(node.nodeType, 'nodeType')\n      if (this.isTextNode(node)) {\n        this.compileText(node)\n      } else if (this.isElementNode(node)) {\n        // 处理元素节点\n        this.compileElement(node)\n      }\n\n      // 判断node节点,是否有子节点, 如果有子节点,要递归调用compile\n      if (node.childNodes && node.childNodes.length) {\n        this.compile(node)\n      }\n    })\n  }\n\n  // 编译元素节点, 出来指令\n  compileElement(node: any) {\n    console.log(node.attributes)\n    // 遍历所有的属性节点\n    Array.from(node.attributes).forEach((attr: any) => {\n      // 判断是否是指令\n      let attrName = attr.name\n      if (this.isDirective(attrName)) {\n        // v-text --> text\n        attrName = attrName.substr(2)\n        let key = attr.value\n        this.update(node, key, attrName)\n      }\n\n      if (this.isEvent(attrName)) {\n        // 是事件on开头\n        console.log(this.vm, 'attrName')\n        let key = attr.value\n        const dir = attrName.substring(3)\n        this.eventHandler(node, this.vm, key, dir)\n      }\n    })\n  }\n\n  isEvent(attr: any) {\n    console.log(attr)\n    return attr.indexOf('on') === 0\n  }\n\n  update(node: any, key: any, attrName: any) {\n    //@ts-ignore\n    let updateFn = this[attrName + 'Updater']\n    updateFn && updateFn.call(this, node, this.vm[key], key)\n  }\n\n  // 处理 v-text 指令\n  textUpdater(node: any, value: any, key: string) {\n    node.textContent = value\n    new Watcher(this.vm, key, (newValue) => {\n      node.textContent = newValue\n    })\n  }\n  // v-model\n  modelUpdater(node: any, value: any, key: string) {\n    node.value = value\n    new Watcher(this.vm, key, (newValue) => {\n      node.value = newValue\n    })\n\n    // 双向绑定\n    node.addEventListener('input', () => {\n      this.vm[key] = node.value\n    })\n  }\n\n  // 处理v-html\n  htmlUpdater(node: any, value: any, key: string) {\n    node.innerHTML = value\n    new Watcher(this.vm, key, (newValue) => {\n      console.log(newValue, 'newValue')\n      node.innerHTML = newValue\n    })\n  }\n\n  // 编译文本节点，出来差值\n  compileText(node: any) {\n    // console.dir(node)\n    let reg = /\\{\\{(.+?)\\}\\}/\n    let value = node.textContent\n    if (reg.test(value)) {\n      let key = RegExp.$1.trim()\n      node.textContent = value.replace(reg, this.vm[key])\n\n      // 创建watcher对象, 当数据改变更新视图\n      new Watcher(this.vm, key, (newValue) => {\n        node.textContent = newValue\n      })\n    }\n  }\n\n  // 添加事件\n  eventHandler(node: any, vm: any, exp: any, dir: any) {\n    const fn = vm.$options.methods && vm.$options.methods[exp]\n    if (dir && fn) {\n      node.addEventListener(dir, fn.bind(vm))\n    }\n  }\n\n  // 判断元素属性是否是指令\n  isDirective(attrName: any) {\n    return attrName.startsWith('v-')\n  }\n\n  // 判断节点是否是文本节点\n  isTextNode(node: any) {\n    return node.nodeType === 3\n  }\n\n  // 判读节点是否是元素节点\n  isElementNode(node: any) {\n    return node.nodeType === 1\n  }\n}\n","//Observer 的作用是遍历所有的属性，给它们安装上 getter / setter 方法\n\nimport { Dep } from \"./Dep\"\n\n\nexport class Observer {\n  constructor(data: any) {\n    this.walk(data)\n  }\n  walk(data: any) {\n    // 1. 判断data是否是对象\n    if (!data || typeof data !== 'object') {\n      return\n    }\n    // 2.遍历data对象的所有属性\n    Object.keys(data).forEach((key) => {\n      this.defineReactive(data, key, data[key])\n    })\n  }\n  defineReactive(obj: any, key: string, val: any) {\n    let that = this\n    // 负责收集依赖, 并发送通知\n    let dep = new Dep()\n\n    // 如果是val对象,把val内部的属性转换成响应式对象\n    that.walk(val)\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get() {\n        // 收集依赖\n        Dep.target && dep.addSub(Dep.target)\n        console.log(Dep.target)\n        return val\n      },\n      set(newValue) {\n        if (newValue === val) {\n          return\n        }\n        val = newValue\n        that.walk(newValue)\n        // 发送通知\n        dep.notify()\n      },\n    })\n  }\n}\n","import { Compiler } from \"./Compiler\"\nimport { Observer } from \"./Observer\"\n\nexport class Vue {\n  private $data: any\n  private $el: any\n  constructor(private options: any) {\n    //1. 通过属性保存选项的数据\n    this.$data = options.data\n    this.$el =\n      typeof options.el === 'string'\n        ? document.querySelector(options.el)\n        : options.el\n    // 2. 把data中的成员转换成getter/setter,注入到Vue实例中\n    this.proxyData(this.$data)\n    // 3. 调用observer对象,监听数据的辩护\n    new Observer(this.$data)\n    // 4. 调用compiler对象, 解析指令和差值表达式\n    new Compiler(this)\n  }\n  proxyData(data: any) {\n    Object.keys(data).forEach((key) => {\n      Object.defineProperty(this, key, {\n        //enumberable: true,\n        configurable: true,\n        get() {\n          return data[key]\n        },\n        set(newValue) {\n          if (newValue === data[key]) {\n            return\n          }\n          data[key] = newValue\n        },\n      })\n    })\n  }\n}\n","import { Vue } from './Vue'\n\nnew Vue({\n  el: '#app',\n  data: {\n    message: 'Hello Vue!',\n  },\n})\n\n\n"]}